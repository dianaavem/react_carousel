{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","currentIndex","handleClick","step","props","images","frameSize","lastIndex","length","nextIndex","setState","this","itemWidth","animationDuration","infinite","className","style","width","animation","map","img","index","transform","transition","src","alt","type","disabled","onClick","React","Component","App","htmlFor","id","value","min","max","onChange","e","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3469968f.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  currentIndex: number,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    currentIndex: 0,\n  };\n\n  handleClick = (step: number) => {\n    const { images, frameSize } = this.props;\n    const { currentIndex } = this.state;\n    const firstIndex = 0;\n    const lastIndex = images.length - frameSize;\n    let nextIndex = currentIndex + step;\n\n    if (step > 0) {\n      if (currentIndex === lastIndex) {\n        nextIndex = firstIndex;\n      } else if (nextIndex > lastIndex) {\n        nextIndex = lastIndex;\n      }\n    }\n\n    if (step < 0) {\n      if (currentIndex === firstIndex) {\n        nextIndex = lastIndex;\n      } else if (nextIndex < firstIndex) {\n        nextIndex = firstIndex;\n      }\n    }\n\n    this.setState({\n      currentIndex: nextIndex,\n    });\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { currentIndex } = this.state;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * itemWidth}px`,\n          animation: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((img, index) => (\n            <li\n              key={img}\n              className=\"Carousel__item\"\n              style={{\n                transform: `translateX(${-currentIndex * itemWidth}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={img}\n                alt={`${index}`}\n                style={{\n                  width: `${itemWidth}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <button\n          className=\"button\"\n          type=\"button\"\n          disabled={currentIndex <= 0 && !infinite}\n          onClick={() => {\n            this.handleClick(-step);\n          }}\n        >\n          Prev\n        </button>\n        <button\n          className=\"button\"\n          type=\"button\"\n          data-cy=\"next\"\n          disabled={currentIndex >= images.length - frameSize\n            && !infinite}\n          onClick={() => {\n            this.handleClick(step);\n          }}\n        >\n          Next\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"step\"\n            className=\"field__label\"\n          >\n            <span className=\"field__name\">Step:</span>\n            <input\n              id=\"step\"\n              type=\"text\"\n              className=\"field__input\"\n              value={step}\n              min={1}\n              max={images.length}\n              onChange={(e) => {\n                this.setState({\n                  step: +e.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"frame-size\"\n            className=\"field__label\"\n          >\n            <span className=\"field__name\">Frame size: </span>\n            <input\n              id=\"frame-size\"\n              type=\"number\"\n              className=\"field__input\"\n              value={frameSize}\n              min={1}\n              max={images.length}\n              onChange={(e) => {\n                this.setState({\n                  frameSize: +e.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"item-width\"\n            className=\"field__label\"\n          >\n            <span className=\"field__name\">Item Width:</span>\n            <input\n              id=\"item-width\"\n              type=\"number\"\n              className=\"field__input\"\n              value={itemWidth}\n              min={130}\n              max={390}\n              onChange={(e) => {\n                this.setState({\n                  itemWidth: +e.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animation\"\n            className=\"field__label\"\n          >\n            <span className=\"field__name\">Animation:</span>\n            <input\n              id=\"animation\"\n              type=\"number\"\n              className=\"field__input\"\n              value={animationDuration}\n              min={500}\n              max={5000}\n              onChange={(e) => {\n                this.setState({\n                  animationDuration: +e.target.value,\n                });\n              }}\n            />\n          </label>\n\n          <label\n            htmlFor=\"infinite\"\n            className=\"field__label\"\n          >\n            <span className=\"field__name\">Infinite:</span>\n            <input\n              id=\"infinite\"\n              type=\"checkbox\"\n              className=\"field__input\"\n              onChange={(e) => {\n                this.setState({\n                  infinite: e.target.checked,\n                });\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}